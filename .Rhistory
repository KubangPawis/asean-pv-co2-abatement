plot.subtitle = element_text(size = 12)
)
ggplot(asean_summary_data, aes(x = land_area_2022/1000,              # thousands of km²
y = homes_required/1e6,         # millions of homes
label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(method = "spearman", label.x = Inf, label.y = Inf,
aes(label = paste(..r.label.., ..p.label.., sep = "~`,`~")),
parse = TRUE, size = 4) +
scale_x_continuous(name = "Land area (×10³ km²)",
labels = scales::comma) +
scale_y_continuous(name = "Homes required (×10⁶)",
labels = scales::comma) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline scenario: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
plot.title  = element_text(face = "bold"),
plot.subtitle = element_text(size = 12)
)
# Imports
library(readr)
library(tidyr)
library(ggplot2)
library(ggrepel)
library(ggpubr)
library(knitr)
library(here)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE,
cache = TRUE
)
country_list  = c("Indonesia", "Myanmar", "Thailand", "Vietnam", "Malaysia",
"Philippines", "Laos", "Cambodia", "Singapore")
# Data Load
asean_summary_path <- here(file.path("data", "asean_summary_final.csv"))
asean_summary_data <- read.csv(asean_summary_path)
# Exlude Brunei analysis for now (no data for Grid EF)
asean_summary_data <- asean_summary_data %>%
filter(`country` %in% country_list)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data, aes(x = land_area_2022/1000,              # thousands of km²
y = homes_required/1e6,         # millions of homes
label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(method = "spearman", label.x = Inf, label.y = Inf,
aes(label = paste(..r.label.., ..p.label.., sep = "~`,`~")),
parse = TRUE, size = 4) +
scale_x_continuous(name = "Land area (×10³ km²)",
labels = scales::comma) +
scale_y_continuous(name = "Homes required (×10⁶)",
labels = scales::comma) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline scenario: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
plot.title  = element_text(face = "bold"),
plot.subtitle = element_text(size = 12)
)
ggplot(df2, aes(x = land_area_2022/1000, y = homes_required/1e6, label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(
method   = "spearman",
label.x  = Inf,
label.y  = Inf,
parse    = TRUE,
size     = 4
) +
scale_x_continuous(name = "Land area (×10³ km²)",
labels = scales::comma) +
scale_y_continuous(name = "Homes required (×10⁶)",
labels = scales::comma) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline scenario: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
plot.title  = element_text(face = "bold"),
plot.subtitle = element_text(size = 12)
)
ggplot(asean_summary_data, aes(x = land_area_2022/1000, y = homes_required/1e6, label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(
method   = "spearman",
label.x  = Inf,
label.y  = Inf,
parse    = TRUE,
size     = 4
) +
scale_x_continuous(name = "Land area (×10³ km²)",
labels = scales::comma) +
scale_y_continuous(name = "Homes required (×10⁶)",
labels = scales::comma) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline scenario: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
plot.title  = element_text(face = "bold"),
plot.subtitle = element_text(size = 12)
)
homes_vs_land_df <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05)
ggplot(homes_vs_land_df, aes(x = land_area_2022/1000, y = homes_required/1e6, label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(
method   = "spearman",
label.x  = Inf,
label.y  = Inf,
parse    = TRUE,
size     = 4
) +
scale_x_continuous(name = "Land area (×10³ km²)",
labels = scales::comma) +
scale_y_continuous(name = "Homes required (×10⁶)",
labels = scales::comma) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline scenario: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
plot.title  = element_text(face = "bold"),
plot.subtitle = element_text(size = 12)
)
homes_vs_land_df <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05)
ggplot(homes_vs_land_df, aes(x = land_area_2022/1000, y = homes_required/1e6, label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(
method   = "spearman",
label.x  = Inf,
label.y  = Inf,
parse    = TRUE,
size     = 4
) +
scale_x_continuous(name = "Land area (×10³ km²)",
labels = scales::comma) +
scale_y_continuous(name = "Homes required (×10⁶)",
labels = scales::comma) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline scenario: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(
panel.grid.minor = element_blank(),
plot.title  = element_text(face = "bold"),
plot.subtitle = element_text(size = 12)
)
homes_vs_land_df <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05)
ggplot(homes_vs_land_df, aes(x = land_area_2022/1000, y = homes_required/1e6, label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm", se = FALSE, color = "grey50") +
geom_text_repel(
aes(label = country),        # move label here
min.segment.length = 0.1
) +
stat_cor(
method  = "spearman",
label.x = Inf,
label.y = Inf,
parse   = TRUE,
size    = 4
) +
scale_x_continuous(
name   = "Land area (×10³ km²)",
labels = scales::comma
) +
scale_y_continuous(
name   = "Homes required (×10⁶)",
labels = scales::comma
) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "5 kW & 5 % CO₂ reduction baseline"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.minor = element_blank())
homes_vs_land_df <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05)
ggplot(homes_vs_land_df, aes(x = land_area_2022/1000, y = homes_required/1e6, label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
# smooth line: explicitly map x & y, ignore other aesthetics
geom_smooth(
aes(x = land_area_2022/1000, y = homes_required/1e6),
method        = "lm",
se            = FALSE,
color         = "grey50",
inherit.aes   = FALSE
) +
# text labels inherit only the label mapping
geom_text_repel(
aes(label = country),
min.segment.length = 0.1
) +
# correlation: don’t inherit any aesthetics, let stat_cor draw its own label
stat_cor(
method      = "spearman",
label.x     = Inf,
label.y     = Inf,
parse       = TRUE,
size        = 4,
inherit.aes = FALSE
) +
scale_x_continuous(
name   = "Land area (×10³ km²)",
labels = scales::comma
) +
scale_y_continuous(
name   = "Homes required (×10⁶)",
labels = scales::comma
) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.minor = element_blank())
homes_vs_land_df <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05)
ggplot(homes_vs_land_df,
aes(x = land_area_2022/1000,  # ×10³ km²
y = homes_required/1e6,   # ×10⁶ homes
label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm",
se     = FALSE,
color  = "grey50") +
geom_text_repel(min.segment.length = 0.1) +
stat_cor(method   = "spearman",
label.x  = Inf,
label.y  = Inf,
parse    = TRUE,
size     = 4) +
scale_x_continuous(
name   = "Land area (×10³ km²)",
labels = scales::comma
) +
scale_y_continuous(
name   = "Homes required (×10⁶)",
labels = scales::comma
) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.minor = element_blank())
homes_vs_land_df <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05)
ggplot(homes_vs_land_df,
aes(x = land_area_2022/1000,  # ×10³ km²
y = homes_required/1e6,   # ×10⁶ homes
label = country)) +
geom_point(size = 3, color = "#2C7BB6") +
geom_smooth(method = "lm",
se     = FALSE,
color  = "grey50") +
geom_text_repel(aes(label = country), min.segment.length = 0.1) +
stat_cor(method   = "spearman",
label.x  = Inf,
label.y  = Inf,
parse    = TRUE,
size     = 4) +
scale_x_continuous(
name   = "Land area (×10³ km²)",
labels = scales::comma
) +
scale_y_continuous(
name   = "Homes required (×10⁶)",
labels = scales::comma
) +
labs(
title    = "Homes Required vs Country Land Area",
subtitle = "Baseline: 5 kW PV & 5 % CO₂ reduction"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.minor = element_blank())
ranks <- baseline %>%
select(country, homes_required) %>%
mutate(rank_homes = dense_rank(desc(homes_required))) %>%
left_join(
land_area %>%
mutate(rank_land = dense_rank(desc(land_km2))),
by = "country"
) %>%
arrange(rank_homes) %>%
select(country, rank_homes, rank_land)
ranks <- asea_summary_data %>%
select(country, homes_required) %>%
mutate(
rank_homes = dense_rank(desc(homes_required)),
rank_land_area = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes) %>%
select(country, rank_homes, rank_land_area)
ranks <- asean_summary_data %>%
select(country, homes_required) %>%
mutate(
rank_homes = dense_rank(desc(homes_required)),
rank_land_area = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes) %>%
select(country, rank_homes, rank_land_area)
ranks <- asean_summary_data %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes = dense_rank(desc(homes_required)),
rank_land_area = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes) %>%
select(country, rank_homes, rank_land_area)
print(ranks)
# Assumption: PV_SYSTEM_SIZE = 5; TARGET_REDUCTION = 0.05
ranks <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes = dense_rank(desc(homes_required)),
rank_land_area = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes) %>%
select(country, rank_homes, rank_land_area)
print(ranks)
# Assumption: PV_SYSTEM_SIZE = 5; TARGET_REDUCTION = 0.05
ranks <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes = dense_rank(desc(homes_required)),
rank_land_area_km2 = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes) %>%
select(country, rank_homes, rank_land_area_km2)
print(ranks)
# Assumption: PV_SYSTEM_SIZE = 5; TARGET_REDUCTION = 0.05
ranks <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes_required = dense_rank(desc(homes_required)),
rank_land_area_km2 = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes_required) %>%
select(country, rank_homes_required, rank_land_area_km2)
print(ranks)
# Assumption: PV_SYSTEM_SIZE = 5; TARGET_REDUCTION = 0.05
ranks <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes_required = dense_rank(desc(homes_required)),
rank_land_area_km2 = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes_required)
print(ranks)
# Assumption: PV_SYSTEM_SIZE = 5; TARGET_REDUCTION = 0.05
ranks <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes_required = dense_rank(desc(homes_required)),
rank_land_area_km2 = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes_required) %>%
rename(land_area_km = land_area_2022)
print(ranks)
# Assumption: PV_SYSTEM_SIZE = 5; TARGET_REDUCTION = 0.05
ranks <- asean_summary_data %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
select(country, homes_required, land_area_2022) %>%
mutate(
rank_homes_required = dense_rank(desc(homes_required)),
rank_land_area_km2 = dense_rank(desc(land_area_2022))
) %>%
arrange(rank_homes_required) %>%
rename(land_area_km2 = land_area_2022)
print(ranks)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size + CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 15) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 10) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 12) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
knitr::opts_chunk$set(echo = TRUE)
# Load the pre-processed datasets
co2_emissions <- read_csv("../data-raw/interim/asean_co2_emissions.csv")
grid_emission <- read_csv("../data-raw/interim/asean_GridEmission.csv")
pv_potential <- read_csv("../data-raw/interim/asean_PV.csv")
summary_final <- read_csv("../data/asean_summary_final.csv")
# Prepare data for plotting
power_emissions_2023 <- co2_emissions %>%
filter(Sector == "Power Industry", Year == 2023) %>%
mutate(
co2_emissions_mt = co2_emissions_g / 1e12, # Convert grams to million metric tons
country = fct_reorder(country, co2_emissions_mt)
)
