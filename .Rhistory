y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO₂ Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO₂ Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO₂ Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO₂ Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO₂ Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO₂ Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Required to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO₂ reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target Reduction"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
ggplot(asean_summary_data,
aes(x = TARGET_REDUCTION * 100,      # convert to % on x-axis
y = homes_required / 1e6,        # millions of homes on y-axis
color = factor(PV_SYSTEM_SIZE))) +# separate line per system size
geom_line(size = 1) +
facet_wrap(~ country, scales = "free_y") +  # one plot per country
scale_x_continuous(breaks = c(1,5,10)) +
scale_y_continuous(labels = scales::comma) +
labs(
x      = "CO2 reduction target (%)",
y      = "Homes required (million)",
color  = "PV size (kW)",
title  = "Sensitivity of Homes Needed to PV Size and CO2 Target"
) +
theme_minimal(base_size = 13) +
theme(
legend.position = "bottom",
panel.grid.minor = element_blank()
)
runApp('inst/app/CO2_Dashboard.R')
---
title: "Quantifying the Impact of Residential Solar on ASEAN CO₂ Emissions"
library(tidyverse) # Use for data science
library(scales) # Use for improving formats/axis
library(ggrepel) # Use for fixing overlapping
library(tidyverse) # Use for data science
library(scales) # Use for improving formats/axis
library(ggrepel) # Use for fixing overlapping
knitr::opts_chunk$set(echo = TRUE)
co2_emissions <- read_csv("../data-raw/interim/asean_co2_emissions.csv")
grid_emission <- read_csv("../data-raw/interim/asean_GridEmission.csv")
pv_potential <- read_csv("../data-raw/interim/asean_PV.csv")
summary_final <- read_csv("../data/asean_summary_final.csv")
power_emissions_2023 <- co2_emissions %>%
filter(Sector == "Power Industry", Year == 2023) %>%
mutate(
co2_emissions_mt = co2_emissions_g / 1e12, # Convert grams to million metric tons
country = fct_reorder(country, co2_emissions_mt)
)
# Create the plot
ggplot(power_emissions_2023, aes(x = co2_emissions_mt, y = country, fill = co2_emissions_mt)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste(round(co2_emissions_mt), "M")), hjust = -0.1, size = 3.5, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred") +
scale_x_continuous(labels = scales::comma_format(suffix = " M tons"), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Power Industry CO₂ Emissions in ASEAN (2023)",
subtitle = "Indonesia is the largest emitter, followed by Vietnam and Malaysia.",
x = "CO₂ Emissions (Million Metric Tons)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
grid_intensity_data <- summary_final %>%
filter(!is.na(ef_gco2_per_kwh)) %>%
mutate(country = fct_reorder(country, ef_gco2_per_kwh))
# Create the plot
ggplot(grid_intensity_data, aes(x = ef_gco2_per_kwh, y = country, fill = ef_gco2_per_kwh)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(ef_gco2_per_kwh, 1)), hjust = -0.2, size = 4) +
scale_fill_gradient(low = "seagreen3", high = "firebrick3") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Grid Emission Intensity Across ASEAN",
subtitle = "Indonesia and Malaysia have the most carbon-intensive electricity grids.",
x = "Emission Factor (gCO₂ per kWh)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
# Prepare data for plotting
power_emissions_2023 <- co2_emissions %>%
filter(Sector == "Power Industry", Year == 2023) %>%
mutate(
co2_emissions_mt = co2_emissions_g / 1e12, # Convert grams to million metric tons
country = fct_reorder(country, co2_emissions_mt)
)
# Create the plot
ggplot(power_emissions_2023, aes(x = co2_emissions_mt, y = country, fill = co2_emissions_mt)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste(round(co2_emissions_mt), "M")), hjust = -0.1, size = 3.5, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred") +
scale_x_continuous(labels = scales::comma_format(suffix = " M tons"), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Power Industry CO2 Emissions in ASEAN (2023)",
subtitle = "Indonesia is the largest emitter, followed by Vietnam and Malaysia.",
x = "CO2 Emissions (Million Metric Tons)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
# Prepare data for plotting
power_emissions_2023 <- co2_emissions %>%
filter(Sector == "Power Industry", Year == 2023) %>%
mutate(
co2_emissions_mt = co2_emissions_g / 1e12, # Convert grams to million metric tons
country = fct_reorder(country, co2_emissions_mt)
)
# Create the plot
ggplot(power_emissions_2023, aes(x = co2_emissions_mt, y = country, fill = co2_emissions_mt)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = paste(round(co2_emissions_mt), "M")), hjust = -0.1, size = 3.5, color = "black") +
scale_fill_gradient(low = "lightblue", high = "darkred") +
scale_x_continuous(labels = scales::comma_format(suffix = " M tons"), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Power Industry CO2 Emissions in ASEAN (2023)",
x = "CO2 Emissions (Million Metric Tons)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
grid_intensity_data <- summary_final %>%
filter(!is.na(ef_gco2_per_kwh)) %>%
mutate(country = fct_reorder(country, ef_gco2_per_kwh))
# Create the plot
ggplot(grid_intensity_data, aes(x = ef_gco2_per_kwh, y = country, fill = ef_gco2_per_kwh)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(ef_gco2_per_kwh, 1)), hjust = -0.2, size = 4) +
scale_fill_gradient(low = "seagreen3", high = "firebrick3") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Grid Emission Intensity Across ASEAN",
x = "Emission Factor (gCO2 per kWh)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
# Prepare data for plotting
pv_factor_data <- summary_final %>%
mutate(country = fct_reorder(country, solar_capacity_factor))
# Create the plot
ggplot(pv_factor_data, aes(x = solar_capacity_factor, y = country)) +
geom_col(fill = "orange") +
geom_text(aes(label = scales::percent(solar_capacity_factor, accuracy = 0.1)), hjust = -0.2, size = 4) +
scale_x_continuous(labels = scales::percent_format(accuracy = 1), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Solar PV Capacity Factor in ASEAN Countries",
x = "Solar Capacity Factor",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
analysis_scenario <- summary_final %>%
filter(PV_SYSTEM_SIZE == 5, TARGET_REDUCTION == 0.05) %>%
# Ensure data is clean for plotting
filter(!is.na(co2_avoided_per_home) & !is.na(homes_required))
co2_avoided_data <- analysis_scenario %>%
mutate(
co2_avoided_tons = co2_avoided_per_home / 1e6, # Convert grams to metric tons
country = fct_reorder(country, co2_avoided_tons)
)
# Create the plot
ggplot(co2_avoided_data, aes(x = co2_avoided_tons, y = country, fill = co2_avoided_tons)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(co2_avoided_tons, 1)), hjust = -0.2, size = 4) +
scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Annual CO₂ Abatement per 5 kW Residential Solar System",
subtitle = "The highest impact is seen in countries with the most carbon-intensive grids.",
x = "CO₂ Avoided (Metric Tons per Home per Year)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
co2_avoided_data <- analysis_scenario %>%
mutate(
co2_avoided_tons = co2_avoided_per_home / 1e6, # Convert grams to metric tons
country = fct_reorder(country, co2_avoided_tons)
)
# Create the plot
ggplot(co2_avoided_data, aes(x = co2_avoided_tons, y = country, fill = co2_avoided_tons)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(co2_avoided_tons, 1)), hjust = -0.2, size = 4) +
scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Annual CO₂ Abatement per 5 kW Residential Solar System",
x = "CO₂ Avoided (Metric Tons per Home per Year)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
# Prepare data for plotting
homes_required_data <- analysis_scenario %>%
mutate(country = fct_reorder(country, homes_required))
# Create the plot
ggplot(homes_required_data, aes(x = homes_required, y = country, fill = homes_required)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(round(homes_required, -3))), hjust = -0.1, size = 3.5) +
scale_fill_gradient(low = "lightgoldenrod1", high = "darkorange3") +
scale_x_continuous(labels = scales::comma_format(), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Number of Homes Needed to Achieve a 5% Reduction in Power-Sector CO₂ Emissions",
subtitle = "Based on 2023 emissions and a 5 kW solar system per home.",
x = "Number of Homes Required",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
# Prepare data for plotting
homes_required_data <- analysis_scenario %>%
mutate(country = fct_reorder(country, homes_required))
# Create the plot
ggplot(homes_required_data, aes(x = homes_required, y = country, fill = homes_required)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(round(homes_required, -3))), hjust = -0.1, size = 3.5) +
scale_fill_gradient(low = "lightgoldenrod1", high = "darkorange3") +
scale_x_continuous(labels = scales::comma_format(), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Number of Homes Needed to Achieve a 5% Reduction in Power-Sector CO₂ Emissions",
x = "Number of Homes Required",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
co2_avoided_data <- analysis_scenario %>%
mutate(
co2_avoided_tons = co2_avoided_per_home / 1e6, # Convert grams to metric tons
country = fct_reorder(country, co2_avoided_tons)
)
# Create the plot
ggplot(co2_avoided_data, aes(x = co2_avoided_tons, y = country, fill = co2_avoided_tons)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(co2_avoided_tons, 1)), hjust = -0.2, size = 4) +
scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Annual CO2 Abatement per 5 kW Residential Solar System",
x = "CO2 Avoided (Metric Tons per Home per Year)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
# Prepare data for plotting
homes_required_data <- analysis_scenario %>%
mutate(country = fct_reorder(country, homes_required))
# Create the plot
ggplot(homes_required_data, aes(x = homes_required, y = country, fill = homes_required)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = scales::comma(round(homes_required, -3))), hjust = -0.1, size = 3.5) +
scale_fill_gradient(low = "lightgoldenrod1", high = "darkorange3") +
scale_x_continuous(labels = scales::comma_format(), expand = expansion(mult = c(0, 0.15))) +
labs(
title = "Homes Needed for 5% CO2 Cut in Power Sector",
x = "Number of Homes Required",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
co2_avoided_data <- analysis_scenario %>%
mutate(
co2_avoided_tons = co2_avoided_per_home / 1e6, # Convert grams to metric tons
country = fct_reorder(country, co2_avoided_tons)
)
# Create the plot
ggplot(co2_avoided_data, aes(x = co2_avoided_tons, y = country, fill = co2_avoided_tons)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = round(co2_avoided_tons, 1)), hjust = -0.2, size = 4) +
scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
scale_x_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(
title = "Annual CO2 Abatement per 5 kW Residential Solar Panel",
x = "CO2 Avoided (Metric Tons per Home per Year)",
y = "Country"
) +
theme_minimal(base_size = 14) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.x = element_blank(),
axis.title.y = element_blank())
